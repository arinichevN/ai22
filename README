Многоканальный модуль ввода для датчиков DHT22 для платформы Arduino.
Приложение опрашивает несколько датчиков с определенным интервалом. Результаты опроса сохраняются в буфер.
К каждому датчику привязаны два канала: один - для температуры, другой - для влажности. Зная номер канала, мы
можем получить определенные данные (температуру или влажность) с определенного датчика, отправив запрос по UART.
1 Установка
1.1 Требования
Использует стандартные библиотеки Arduino.
1.2 Настройки:
Там, где есть метка "-user_config:", можно редактировать исходный код.
файл ./app.h:
	общие настройки;
файл ./app/config.h:
	параметры приложения;
файл ./app/config.c:
	параметры UART;
файл ./model/device/main.h:
	количество подключенных датчиков.
файл ./model/device/main.c:
	параметры датчиков.
файл ./model/channel.h:
	параметры каналов по-умолчанию.
2 Использование
Интерфейс пользователя включает в себя UART-сервер, принимающий команды для управления приложением; светодиод, сигнализирующий
об ошибках; кнопку установки параметров по-умолчанию. 
2.1 Управление приложением через UART.
Каждый из UART микроконтроллера может быть настроен для работы в режиме сервера или для вывода отладочных сообщений.
В сети модуль ввода ведёт себя как ведомое устройство. Отладочные сообщения можно выводить только на один из UART. 
Сервера можно привязать к несколькоим UART, тогда микроконтроллер сможет работать одновременно с несколькими клиентами.
Все поддерживаемые команды можно найти в файле ./app/server_config.c (функция acpls_buildNodes()).
Запросы и ответы представляют собой текстовые строки в формате:
<запросОтвет;команда;идентификатор;данные;контрольнаяСумма>
	, где:
		< - начало пакета,
		? - знак запроса,
		! - знак ответа,
		; - разделитель,
		> - конец пакета.
В зависимости от команды, в качестве идентификатора может выступать номер канала, номер приложения.
Для избежания конфликтов, идентификаторы должны быть уникальными в пределах одной сети.
Чтобы иметь возможность отправлять запросы устройству через Arduino Serial Monitor, нужно отключить
проверку контрольной суммы, установив в 0 константу ACP_CHECK_CRC в файле ./acp/main.h.
Примеры команд:
	для канала приложения с идентификатором 1:
		запустить канал (загрузить настройки из ПЗУ в ОЗУ, активировать, сохранить, начать работу):
		<?;20;1;~>
		получить результаты измерения микросхемы:
		<?;31;1;~>
2.2. Управление с помощью ПК.
Приложение gwst для POSIX совместимых ОС связывает последовательные порты с 
интернетом, а приложение для веб-браузера wui позволяет пользователю взаимодействовать
с данным приложением.




